# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'oracle'
        cache: maven
    
    - name: Verify version
      id: verify_version
      run: |
        VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        if [[ ! $VERSION =~ [0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "Version $VERSION does not match the required format. Ex. 1.0.0"
          exit 1
        fi
        
    - name: Verify tag
      id: verify_tag
      run: |
        VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        TAG="v$VERSION"
        if git rev-parse "refs/tags/$TAG" >/dev/null 2>&1; then
        echo "Tag $TAG already exists."
        exit 1
        fi
        
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Upload JaCoCo report
      uses: actions/upload-artifact@v4
      with:
        name: jacoco-report
        path: .qodana/code-coverage/jacoco.xml

  qodana:
    runs-on: self-hosted
    permissions:
      contents: write
      pull-requests: write
      checks: write
      security-events: write  # âœ… Needed for SARIF upload

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Download JaCoCo report
        uses: actions/download-artifact@v4
        with:
          name: jacoco-report
          path: .qodana/code-coverage

      - name: 'Qodana Scan'
        uses: JetBrains/qodana-action@v2024.3
        with:
          pr-mode: false
          push-fixes: pull-request
          args: --apply-fixes
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
          QODANA_ENDPOINT: 'https://qodana.cloud'

      - name: Upload SARIF results to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ runner.temp }}/qodana/results/qodana.sarif.json
          category: Qodana
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}